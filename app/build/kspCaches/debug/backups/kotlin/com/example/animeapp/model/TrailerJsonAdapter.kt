// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.example.animeapp.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class TrailerJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<Trailer>() {
  private val options: JsonReader.Options = JsonReader.Options.of("youtube_id", "url", "embed_url",
      "images")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "youtubeId")

  private val trailerImagesAdapter: JsonAdapter<TrailerImages> =
      moshi.adapter(TrailerImages::class.java, emptySet(), "images")

  public override fun toString(): String = buildString(29) {
      append("GeneratedJsonAdapter(").append("Trailer").append(')') }

  public override fun fromJson(reader: JsonReader): Trailer {
    var youtubeId: String? = null
    var url: String? = null
    var embedUrl: String? = null
    var images: TrailerImages? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> youtubeId = nullableStringAdapter.fromJson(reader)
        1 -> url = nullableStringAdapter.fromJson(reader)
        2 -> embedUrl = nullableStringAdapter.fromJson(reader)
        3 -> images = trailerImagesAdapter.fromJson(reader) ?: throw Util.unexpectedNull("images",
            "images", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return Trailer(
        youtubeId = youtubeId,
        url = url,
        embedUrl = embedUrl,
        images = images ?: throw Util.missingProperty("images", "images", reader)
    )
  }

  public override fun toJson(writer: JsonWriter, value_: Trailer?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("youtube_id")
    nullableStringAdapter.toJson(writer, value_.youtubeId)
    writer.name("url")
    nullableStringAdapter.toJson(writer, value_.url)
    writer.name("embed_url")
    nullableStringAdapter.toJson(writer, value_.embedUrl)
    writer.name("images")
    trailerImagesAdapter.toJson(writer, value_.images)
    writer.endObject()
  }
}

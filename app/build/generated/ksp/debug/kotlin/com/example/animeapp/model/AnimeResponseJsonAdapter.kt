// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.example.animeapp.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class AnimeResponseJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<AnimeResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("pagination", "data", "status",
      "type", "message", "error")

  private val nullablePaginationAdapter: JsonAdapter<Pagination?> =
      moshi.adapter(Pagination::class.java, emptySet(), "pagination")

  private val nullableListOfAnimeAdapter: JsonAdapter<List<Anime>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, Anime::class.java), emptySet(),
      "data")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "status")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "type")

  @Volatile
  private var constructorRef: Constructor<AnimeResponse>? = null

  public override fun toString(): String = buildString(35) {
      append("GeneratedJsonAdapter(").append("AnimeResponse").append(')') }

  public override fun fromJson(reader: JsonReader): AnimeResponse {
    var pagination: Pagination? = null
    var data_: List<Anime>? = null
    var status: Int? = null
    var type: String? = null
    var message: String? = null
    var error: String? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          pagination = nullablePaginationAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          data_ = nullableListOfAnimeAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          status = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          type = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          message = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          error = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xffffffc0.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  AnimeResponse(
          pagination = pagination,
          `data` = data_,
          status = status,
          type = type,
          message = message,
          error = error
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<AnimeResponse> = this.constructorRef ?:
          AnimeResponse::class.java.getDeclaredConstructor(Pagination::class.java, List::class.java,
          Int::class.javaObjectType, String::class.java, String::class.java, String::class.java,
          Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          pagination,
          data_,
          status,
          type,
          message,
          error,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: AnimeResponse?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("pagination")
    nullablePaginationAdapter.toJson(writer, value_.pagination)
    writer.name("data")
    nullableListOfAnimeAdapter.toJson(writer, value_.`data`)
    writer.name("status")
    nullableIntAdapter.toJson(writer, value_.status)
    writer.name("type")
    nullableStringAdapter.toJson(writer, value_.type)
    writer.name("message")
    nullableStringAdapter.toJson(writer, value_.message)
    writer.name("error")
    nullableStringAdapter.toJson(writer, value_.error)
    writer.endObject()
  }
}
